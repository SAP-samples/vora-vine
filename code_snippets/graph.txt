---------- Query1----------
CREATE PARTITION FUNCTION PFG_EMP(X BIGINT) AS BLOCK(X) PARTITIONS 16 BLOCKSIZE 1000;

---------- Query2----------
CREATE PARTITION SCHEME PSG_EMP USING PFG_EMP;

---------- Query3----------
CREATE GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query4----------
ALTER GRAPH EMPLOYEES_UNPARTITIONED ADD DATASOURCE HDFS('hdfs://hdfs:9000/user/vora/EMPLOYEES_GRAPH.jsg');

---------- Query5----------
LOAD GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query6----------
CREATE GRAPH EMPLOYEES_PARTITIONED PARTITION BY PSG_EMP(NODEID);

---------- Query7----------
ALTER GRAPH EMPLOYEES_PARTITIONED ADD DATASOURCE HDFS('hdfs://hdfs:9000/user/vora/EMPLOYEES_GRAPH.jsg');

---------- Query8----------
LOAD GRAPH EMPLOYEES_PARTITIONED;

---------- Query9----------
SELECT * from EMPLOYEES_PARTITIONED;

---------- Query10----------
SELECT NAME FROM EMPLOYEE USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query11----------
SELECT NAME FROM ANY USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query12----------
SELECT NODETYPE FROM ANY USING GRAPH EMPLOYEES_UNPARTITIONED WHERE NODEID > 2;

---------- Query13----------
SELECT DEGREE(A) FROM MANAGER A USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query14----------
SELECT DISTANCE(A,B) FROM EMPLOYEE A, MANAGER B USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query15----------
SELECT A.NAME, B.NAME FROM EMPLOYEE A,EMPLOYEE B USING GRAPH EMPLOYEES_UNPARTITIONED WHERE DISTANCE(A,B)< 2;

---------- Query16----------
SELECT NODEID, NODETYPE FROM ANY USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query17----------
SELECT COUNT(*) FROM ANY a USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query18----------
SELECT MAX(a.NODEID) FROM ANY a USING GRAPH EMPLOYEES_UNPARTITIONED;

---------- Query19----------
SELECT COUNT(*) FROM ANY a, ANY b USING GRAPH EMPLOYEES_UNPARTITIONED WHERE a IN b.ANY;

---------- Query20----------
SELECT NAME FROM NODETYPE USING GRAPH TYPE_INFO(EMPLOYEES_UNPARTITIONED);

---------- Query21----------
SELECT SRC.NAME,E.NAME,TGT.NAME,E.DIRECTION FROM NODETYPE SRC, EDGETYPE E, NODETYPE TGT USING GRAPH TYPE_INFO(EMPLOYEES_UNPARTITIONED) WHERE SRC IN E.SOURCE AND TGT IN E.TARGET;

---------- Query22----------
SELECT V.NAME,P.NAME,P.SQLTYPE FROM NODETYPE V, PROPERTYTYPE P USING GRAPH TYPE_INFO(EMPLOYEES_UNPARTITIONED) WHERE P IN V.HAS_PROPERTY;
